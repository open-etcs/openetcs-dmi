$fontStack: Chicago, Helvetica, Swiss, Verdana, sans-serif;
$fontSize: 12px;

$borderWidth: 1px;
$doubleBorder: 2 * $borderWidth;

$paddingWidth: 3px;

$buttonHeight: 50px;


$ColorWhite: rgb(255,255,255);
$ColorBlack: rgb(0,0,0);
$ColorGrey: rgb(195, 195, 195);
$ColorMediumGrey: rgb(150, 150, 150);
$ColorDarkGrey: rgb(85, 85, 85);
$ColorDarkBlue: rgb(3, 17, 34);
$ColorShadow: rgb(8, 24, 57);
$ColorYellow: rgb(223, 223, 0);
$ColorOrange: rgb(234, 145, 0);
$ColorRed: rgb(191, 0, 2);
$ColorPASPDark: rgb(33, 49, 74);
$ColorPASPLight: rgb(41, 74, 107);


$Z_width:  640px;
$Z_height: 15px;

$A_width:  54px;
$A_height: 300px;

$B_width:  280px;
$B_height: $A_height;

$C_width:  $A_width + $B_width;
$C_height: 50px;

$E_width:  $C_width;
$E_height: 100px;

$Y_width:  $Z_width;
$Y_height: $Z_height;

$D_width:  246px;
$D_height: $A_height;

$G_width:  $D_width;
$G_height: $C_height + $E_height;

$F_width: $Z_width - $C_width - $D_width;
$F_height: $D_height + $G_height;



.notSelectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.clean { clean: all; }

  
@mixin absoluteWidthHeight($w, $h) {
    width: $w;
    height: $h;
    max-width: $w;
    max-height: $h;    
}

@mixin generalPanel($w, $h) {
  background-color: $ColorDarkBlue;
  @include absoluteWidthHeight($w,$h);
}

 
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin zoom($zf) {
  transform-origin: 0px 0px;
  -moz-transform-origin: 0px 0px;
  -webkit-transform-origin: 0px 0px;
  -o-transform-origin: 0px 0px;
  -ms-transform-origin: 0px 0px;
  -moz-transform: scale($zf);
  -webkit-transform: scale($zf);
  -o-transform: scale($zf);
  -ms-transform: scale($zf);
  transform: scale($zf);
}

body {
  background-color: $ColorBlack;
  font-size: $fontSize;  
  font-family: $fontStack;
  line-height: 200%;
  color: $ColorGrey;
  stroke: $ColorGrey;
  fill: $ColorGrey;
  overflow: hidden;
  @include zoom(1.4);
}




@mixin borderTL($width, $style, $color) {
  border-top-width:  $width ;
  border-left-width: $width ;
  border-top-style:  $style ;
  border-left-style: $style ;
  border-top-color:  $color ;
  border-left-color: $color ;
}

@mixin borderBR($width, $style, $color) {
  border-bottom-width:  $width ;
  border-right-width: $width ;
  border-bottom-style:  $style ;
  border-right-style: $style ;
  border-bottom-color:  $color ;
  border-right-color: $color ;
}

div[data-widget="Button"] {
  @extend .notSelectable;
    
  background-color: $ColorDarkBlue;
  padding: 0px;
  display: table;
  cursor: pointer;
  
  div {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
  }

}


div[data-widget="Button"][data-state="ButtonEnabled"] {
    
  @include borderTL($borderWidth, solid, $ColorBlack);
  @include borderBR($borderWidth, solid, $ColorShadow);
  
  div {
   @include borderBR($borderWidth, solid, $ColorBlack);
   @include borderTL($borderWidth, solid, $ColorShadow);

  }
    
}

div[data-widget="Button"][data-state="ButtonPressed"] {

  border: $borderWidth solid $ColorDarkBlue;

  div {
   @include borderTL($borderWidth, solid, $ColorBlack);
   @include borderBR($borderWidth, solid, $ColorShadow);
  }
    
}


div[data-widget="Button"][data-state="ButtonDisabled"] {

  color: $ColorDarkGrey;
  fill: $ColorDarkGrey;
  stroke: $ColorDarkGrey;
  cursor: not-allowed;
  @include borderTL($borderWidth, solid, $ColorBlack);
  @include borderBR($borderWidth, solid, $ColorShadow);
  
  div {
   @include borderBR($borderWidth, solid, $ColorBlack);
   @include borderTL($borderWidth, solid, $ColorShadow);
   height: 100%
  }
    
}


div[data-widget="WindowTitle"] {
  @extend .notSelectable;
  height: 24px;
  max-height: 24px;
  background-color: $ColorBlack;
  border: none;
  cursor: default;
  padding-left: $paddingWidth;
  position: relative;
  
  div {
    position: absolute;
    left: 0px;
    top: 0px;
  }
    
  svg[data-sprite] {
    position: absolute;
    margin-top: 2px;
    @include absoluteWidthHeight(20px, 20px);
    top: 0px;
    left: 42px;
  }
}

div[data-widget="Keyboard"], div[data-widget="DedicatedKeyboard"] {
  $keyboardButtonWidth: 102px;
  $keyboardButtonHeight: 50px;
  @include absoluteWidthHeight(3 * $keyboardButtonWidth, 4 * $keyboardButtonHeight);

  .MoreButton {
    position: absolute;
    left: 2 * $keyboardButtonWidth;
    top: 3 * $keyboardButtonHeight + 15px; // FIXME: 15px ?!?!
  }
    
  div[data-widget="Button"] {    
    font-size: 16px;
    float: left;
    @include absoluteWidthHeight($keyboardButtonWidth - $doubleBorder, $keyboardButtonHeight - $doubleBorder);
    
  }
}
    
div.MenuWindow {
  float: left;

  background-color: $ColorDarkBlue;
  border: none;
  @include absoluteWidthHeight($D_width + $F_width, $F_height);
  
  div[data-widget="WindowTitle"] {
    $titleWidth: $D_width + $F_width - $paddingWidth;
    width: $titleWidth;
    max-width: $titleWidth;
  }
    
  div[data-widget="ButtonGroup"] {
    $buttonsWidth: $D_width + $F_width;
    
    width: $buttonsWidth - $doubleBorder;
    max-width: $buttonsWidth - $doubleBorder;

    $buttonWidth: 152px;
    
    position: absolute;
    top: $buttonHeight + $doubleBorder;
    
    div[data-widget=Button] {
      @include absoluteWidthHeight( $buttonWidth - $doubleBorder 
                                  , $buttonHeight - $doubleBorder);
      float: left;

      svg {
        @include absoluteWidthHeight(32px, 32px);
      }
    }

    .EmptyButton {      
      @include generalPanel( $buttonWidth
                           , $buttonHeight);
      border: 0px none $ColorDarkBlue;
      float: left;
    }
  }

  .MenuClose {
    position: absolute;
    top: 400px;
    
    div[data-widget="Button"] {
      @include absoluteWidthHeight(82px - $doubleBorder, $buttonHeight - $doubleBorder);
       svg {
         @include absoluteWidthHeight(32px, 32px);
       }
    }
  }

}


div[data-widget="InputField"] {
  $fieldWidth: 306px;
  $fieldHeight: 50px;
  $fieldDataLabelWidth: 102px;
  
  @include absoluteWidthHeight( $fieldWidth
                              , $fieldHeight);

  cursor: pointer;

  .LabelArea {
    $paddingRight: 10px; 
    @extend .notSelectable;    

    float: left;
    padding-right: $paddingRight;

    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
    -webkit-align-items: center;
    align-items: center;
    
    background-color:  $ColorDarkGrey;
    border: 1px solid $ColorMediumGrey;
    border-right: none;

    @include absoluteWidthHeight(
    $fieldWidth - $fieldDataLabelWidth - $paddingRight - $borderWidth,
    $fieldHeight - $doubleBorder);

  }

  .DataAreaFull {
    $paddingLeft: 10px;

    @include absoluteWidthHeight(
    $fieldWidth - $paddingLeft - $doubleBorder,
    $fieldHeight - $doubleBorder);

    float: left;
    padding-left: $paddingLeft;
    background-color:  $ColorDarkGrey;
    border: 1px solid $ColorMediumGrey;

    display: -webkit-flex;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
  }

  .DataAreaLabel {
    $paddingLeft: 10px;
    @extend .DataAreaFull;      
      
    @include absoluteWidthHeight(
    $fieldDataLabelWidth - $paddingLeft - $borderWidth,
    $fieldHeight - $doubleBorder);
    border-left: none;
  }

  .DataAreaFull[data-state="Accepted"] {
    background-color: $ColorDarkGrey;
    color: $ColorWhite;
  }
  
  .DataAreaLabel[data-state="Accepted"] {
    background-color: $ColorDarkGrey;
    color: $ColorWhite;
  }

  .DataAreaLabel[data-state="Selected"] {
    background-color:  $ColorGrey;
    color: $ColorBlack;
    padding-left: 9px;

    @include borderTL($borderWidth, solid, $ColorWhite);
    @include borderBR($borderWidth, solid, $ColorDarkGrey);
  }

  .DataAreaLFull[data-state="Selected"] {
    background-color:  $ColorGrey;
    color: $ColorBlack;
    padding-left: 9px;

    @include borderTL($borderWidth, solid, $ColorWhite);
    @include borderBR($borderWidth, solid, $ColorDarkGrey);
  }
    
}


div[data-widget="AlphaNumKeyboard"] {
        font-size: 16px;
}

  
div[data-widget="DriverIdWindow"] {

  div[data-widget="DriverIdSubWidget"] {
    display: flex;
    flex-direction: column;
    
    div[data-widget="AlphaNumKeyboard"] {
      order: 1;
      margin-top: 50px;
    }
      
    div[data-widget="InputField"] {
      order: 0;
      margin-top: 50px;
    }      
  }

    
  .MenuClose {
    @include absoluteWidthHeight(82px - $doubleBorder, $buttonHeight - $doubleBorder);
    position: absolute;
    top: 400px;
    
    div[data-widget="Button"] { width: 100%; height: 100%; font-size: 24px }      
  }

}


div[data-widget="SpeedDial"] {
  @include absoluteWidthHeight($B_width, $B_height);
  float: left;
  background-color: $ColorDarkBlue;
}

g[data-widget="DigitalSpeed"] {
  color: $ColorBlack;
  stroke: $ColorBlack;
  fill: $ColorBlack;
  text {
    text-anchor: end;
    font-size: 18px;
    dominant-baseline: central;
  }
}

g[data-widget="SpeedIndicatorLines"] {
  text {
    text-anchor: middle;
    dominant-baseline: central;
    font-size: 16px;
  }
}


#dmiMain {
  $w: $C_width + $G_width + $F_width;
  $h: $D_height + $G_height;
  @include absoluteWidthHeight($w,$h);
}

#leftSide {
  float: left;
  @include generalPanel($C_width, $A_height + $C_height + $E_height);
}

#dmiTop, #dmiBottom {
  @include absoluteWidthHeight($Z_width - $paddingWidth, $Z_height);
  background-color: $ColorDarkBlue;
}
